---
# Source: voting-requirements/templates/database-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: voting-requirements-database
  labels:
    app.kubernetes.io/name: voting-requirements-db
    helm.sh/chart: voting-requirements-0.1.0
    app.kubernetes.io/instance: first-release-requirements
    app.kubernetes.io/managed-by: Tiller
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
    app.kubernetes.io/name: voting-requirements-db
    app.kubernetes.io/instance: first-release-requirements
    app.kubernetes.io/app: database
    app.kubernetes.io/brand: mongodb

---
# Source: voting-requirements/templates/queue-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: voting-requirements-queue
  labels:
    app.kubernetes.io/name: voting-requirements-queue
    helm.sh/chart: voting-requirements-0.1.0
    app.kubernetes.io/instance: first-release-requirements
    app.kubernetes.io/managed-by: Tiller
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    app.kubernetes.io/name: voting-requirements-queue
    app.kubernetes.io/instance: first-release-requirements
    app.kubernetes.io/app: queue
    app.kubernetes.io/brand: redis

---
# Source: voting-requirements/templates/database-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: voting-requirements-database
  labels:
    app.kubernetes.io/name: voting-requirements-db
    helm.sh/chart: voting-requirements-0.1.0
    app.kubernetes.io/instance: first-release-requirements
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/app: database
    app.kubernetes.io/brand: mongodb
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: voting-requirements-db
      app.kubernetes.io/instance: first-release-requirements
      app.kubernetes.io/app: database
      app.kubernetes.io/brand: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: voting-requirements-db
        app.kubernetes.io/instance: first-release-requirements
        app.kubernetes.io/app: database
        app.kubernetes.io/brand: mongodb
    spec:
      containers:
        - name: voting-requirements
          image: "mongo:3.4"
          imagePullPolicy: IfNotPresent
          ports:
          -  containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
          resources:
            {}
            

---
# Source: voting-requirements/templates/queue-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: voting-requirements-queue
  labels:
    app.kubernetes.io/name: voting-requirements-queue
    helm.sh/chart: voting-requirements-0.1.0
    app.kubernetes.io/instance: first-release-requirements
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/app: queue
    app.kubernetes.io/brand: redis
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: voting-requirements-queue
      app.kubernetes.io/instance: first-release-requirements
      app.kubernetes.io/app: queue
      app.kubernetes.io/brand: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: voting-requirements-queue
        app.kubernetes.io/instance: first-release-requirements
        app.kubernetes.io/app: queue
        app.kubernetes.io/brand: redis
    spec:
      containers:
        - name: voting-requirements-queue
          image: "redis:3.2"
          imagePullPolicy: IfNotPresent
          ports:
          -  containerPort: 6379
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - '[ $(redis-cli ping) = PONG ]'
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - '[ $(redis-cli ping) = PONG ]'
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 5
          resources:
            {}
            

